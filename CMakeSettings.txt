# --------------------------------------------------------------------------- #
#    Custom CMake settings for SMS++ projects                                 #
#                                                                             #
#    Uncomment the lines you need.                                            #
#    You can also specify single variables with the -D option, e.g.:          #
#                                                                             #
#       cmake -DCMAKE_BUILD_TYPE=Debug ..                                     #
#                                                                             #
#                              Niccolo' Iardella                              #
#                                Donato Meoli                                 #
#                         Dipartimento di Informatica                         #
#                             Universita' di Pisa                             #
# --------------------------------------------------------------------------- #

# ----- Build settings ------------------------------------------------------ #
# CMake already adds the following flags for each build type:                 #
#                                                                             #
#   - Debug:          -g                                                      #
#   - MinSizeRel:     -Os -DNDEBUG                                            #
#   - Release:        -O3 -DNDEBUG                                            #
#   - RelWithDebInfo: -O2 -g -DNDEBUG                                         #
# --------------------------------------------------------------------------- #
# Build type
#set(CMAKE_BUILD_TYPE "Debug")

# Shared or static libraries
#set(BUILD_SHARED_LIBS ON)

# Export packages from build tree (so they are found without installing them)
set(CMAKE_EXPORT_PACKAGE_REGISTRY ON)

# Enable verbose makefiles
#set(CMAKE_VERBOSE_MAKEFILE ON)

# FindBoost.cmake contains:
#if (Boost_VERSION_STRING VERSION_GREATER_EQUAL 1.79.0 AND NOT Boost_NO_WARN_NEW_VERSIONS)
#  message(WARNING "New Boost version may have incorrect or missing dependencies and imported targets")
#endif ()
set(Boost_NO_WARN_NEW_VERSIONS 1)

# Add compilation and linking flags
# Note: add_compile_options() is recommended over CMAKE_<LANG>_FLAGS_<CONFIG>
if (MSVC)
    set(MSVC_DISABLED_WARNINGS_LIST
        "C4018" # 'expression' : signed/unsigned mismatch
        "C4057" # 'operator' : 'identifier1' indirection to
                # slightly different base types from 'identifier2'
        "C4060"
        "C4065"
        "C4100" # 'identifier' : unreferenced formal parameter
        "C4101"
        "C4102"
        "C4127" # conditional expression is constant
        "C4146" # unary minus operator applied to unsigned type,
                # result still unsigned
        "C4189"
        "C4244" # 'argument' : conversion from 'type1' to 'type2',
                # possible loss of data
        "C4245" # 'conversion' : conversion from 'type1' to 'type2',
                # signed/unsigned mismatch
        "C4267" # 'var' : conversion from 'size_t' to 'type',
                # possible loss of data
        "C4373"
        "C4389" # 'operator' : signed/unsigned mismatch
        "C4390"
        "C4456"
        "C4457"
        "C4458"
        "C4459"
        "C4505"
        "C4701"
        "C4702"
        "C4703"
        "C4706" # assignment within conditional expression
        "C4717"
        "C4804"
        "C4858"
        "C4996" # The POSIX name for this item is deprecated.
                # Instead, use the ISO C and C++ conformant name
    )
    string(REPLACE "C" " -wd" MSVC_DISABLED_WARNINGS_STR ${MSVC_DISABLED_WARNINGS_LIST})
    string(REGEX REPLACE "[/-]W[1234][ ]?" "" CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS})
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -MP -W4 ${MSVC_DISABLED_WARNINGS_STR}")
    add_link_options("/IGNORE:4006,4075,4088,4255")
else() # Unix
    add_compile_options(
             "-Wno-enum-compare" "-Wno-macro-redefined"
             "-DBUILD_CPXSTATIC" "-DCPXSIZE_BITS_TEST_DISABLE"
             #"-ferror-limit=1" "-fexceptions"
             #"-Wall" "-Wpedantic" "-Wextra"
             #"-fsanitize=undefined" "-fsanitize=address" "-fno-omit-frame-pointer"
             "$<$<CONFIG:DEBUG>:-fno-inline>"
             #"$<$<CONFIG:MINSIZEREL>:>"
             #"$<$<CONFIG:RELEASE>:>"
             #"$<$<CONFIG:RELWITHDEBINFO>:>"
    )
    #add_link_options("-fsanitize=address")
endif ()

# Custom output directories
#set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
#set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
#set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
